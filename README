# Web-scrapovanie centálneho registra zmlúv

## Skript na hľadanie súborov s uniknutými osobnými dátami z centrálneho registra zmlúv SR

Celý skript je napísaný v pythone v3_12. Používam query v url adrese a nie bulk download, ktorý odporúčajú, pretože cez neho nie je zrejme možné vyriešiť tento problém efektívne. Celý kód je písany v angličtine kvôli zvyku okrem pár výnimiek, ktoré mi osobne prišlo lepšie nechať v slovenčine.


## Sťahovanie dokumentov zo stránky:

funkie v module download_file.py

1. fukcia get_code_list() rozloží číslo zmluvy na list parametrov
2. funkcia get_hrefs_url() vráti list všetkých href odkazov, ktoré boli nájdené na pod jedným číslom zmluvy
3. funkcia get_pdf_list() potom vráti url adresy všetkých PDF dokumentov pod každým href odkazom od funkcie get_hrefs_url(). Funguje rekurzívne, takže pokiať sa v html odpovedi nachádzajú dodatky, na ich href odkazy sa znova aplikuje
3. funkcia download_PDF() stiahne všetky dokumenty v liste od funkcie get_pdf_list(). Všetky dokumenty sa uložia do súboru pdf_files
4. funkcia get_files() spája všetky dokopy

dodatok:

som už paranoidný po predošlých skúsenostiach a preto pre kažký request generujem náhodné html headery z modulu request_headers.py. Sú tam aj váhy pre kažký jeden paramenter a ich náhoda sa odvíja od nich. Dáta sú získané z reálnej štatistiky. Taktiež generujem aj nové cookies súbory. Pre každé jedno číslo zmluvy generujem jeden header a jeden cookie jar aby som simuloval jedného človeka. Rozostupy medzi requestami sú tiež náhodné (0,4-0,7s). Dá sa minimálny čas čakania upraviť v settings.py.


## Parsovanie dokumentov

funkcie v module read_pdf.py

### predpoklady

1. nesmie sa v dokumente nachádzať rodné číslo, dátum narodenia, bydlisko
2. V paragrafe fyzickej osoby (ak sa nachádza) nesmie byť žiadne bankové spojenie


1. funkcia get_pdf_text() vráti text z celého dokumentu
2. funkcia format_spaces() formátuje text tak, že vymaže za sebou prebytočné voľné miesta 
3. funkcia check_PDF() skontroluje dokument. Je založená na princípe canon slov a aliasov. Canon slovo predstavuje podstatu slova. Napr. birth_num predstavuje všetky formy rodného čísla a aliasy sú alternatívy toho slova, napr. rodné čislo, rod. č., rodné č. atď. V celom texte sa vyhľadajú všetky alternátívy slov a sú k nim priradené canon slová. Vyhľadávanie funguje pomocou ahocorasickovho algoritmu na hľadanie slov v lineárnej rýchlosti. Ak sa nájde nejaký alias, vyčlení sa buffer string, v ktorom sa následne hľadá patern daného slova. Patern je vytovrený pomocou regex modulu. Vytvorí správu o chybe vo tvare stringu a pridá ho do listu všetkých správ. Príklad, v texte sa nájde slovo rod. č. Vytvorí sa buffer za nájdeným slovom cca 50 charov  a hľadá sa v ňom patern rodného čísla. Ak sa nájde, vytvorí sa ERROR správa, pridá sa ku všetkým správam a po prejdení celého dokumentu sa vytvorí Result_class s výsledkom daného dokumentu a inými súvisiacimi parametrami. Ak sa nájde alias pre fyzickú osobu, vytvorí sa paragraf buffer veľkosti cca 500 charov a hľadajú sa v ňom rovnako paterny pre IBAN alebo číslo bankového účtu. Na záver sa vytvoria warning správy, ak sa v dokumente objaví alias pre fyzickú osobu alebo slovo bydlisko nezávisle na predošlých výsledkoch pre ideálne manuálnu kontrolu. Dokument bude aj napriek warningom označený za správny, pokiaľ nenájde žiaden error. (aj súbory s warningom sa úkážu vo výsledku)

Výhody canon slov a aliasov sú, že sa dá kód ľahko rozšíriť na viacero aliasov a správy sú v jednotnom tvare. Všetky parametre s týmto spojené sa dajú zmeniť v module settings.py vrátane veľkostí bufferov podľa potreby. V settings.py sa nachádza aj premenná, ktorá sprístupní kontrolovať aliasy pre digitally_signed ale kvôli ich veľkému množstvu je v základe vypnutá.

## main file

Hlavný file, kde sa celý kód spája, súbor main.py

1. funkcia get_code_list() získa všetky kódy z konkrétneho excel hárku
2. zoberie sa jeden string z listu data
3. stiahne pdf_súbory do pdf_files
4. skontroluje ich
5. appendne odpoveď do answer.txt
6. vyčistí pdf_files folder
7. následovne iteruje cez celý list data


## Ako spustiť script

odporúčané:
1. vytvorte venv s python interpretom v3_12 64bit v root directory
2. nainštalujte všetky moduly v dokumente requirements.txt do venv (pip install -r requirements.txt)
3. spustte main.py file ideálne v root directory directory (answer.txt sa vytvorí tam, kde main.py bol spustený)


## Známe problémy

1. efektivita závisí hlavne na ideálnych aliasoch (tiež nie je dobré, ak ich je príliš veľa)
2. zatiaľ nefungujú čísla zmluv bez lomítok
3. nenájde podpisy ale takťiež momentálne nie sú v predpokladoch
4. nie je otestované na väčšej testovacej vzorke (momentálne cca 70 čísiel zmlúv)


Občas sú pridané stubs, ale iba pri niektorých konštantách a funkciách. README je písaný čo najviac stručne a viac informácií a funkciách srciptu treba pozrieť kód